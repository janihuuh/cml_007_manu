fwrite(p.df, "results/manuscript/dasatinib/dasa_p_df.txt", sep = "\t", quote = F, row.names = F)
p.df <- fread("results/manuscript/dasatinib/dasa_p_df.txt")
p.df %>% filter(p.adj < 0.1) %>%
ggplot(aes(reorder(variable,-log10(p.adj)), -log10(p.adj), fill = type)) + geom_bar(stat = "identity") + coord_flip() + labs(x = "") + facet_wrap(~dir, scales = "free_y")
p.df %>% filter(type == "facs") %>% mutate(p.adj = p.adjust(p.value, method = "BH")) %>%
mutate(col = ifelse(p.adj < 0.05, dir, "no")) %>%
mutate(dir = plyr::revalue(dir, replace = c("down" = "up in diagnosis", "up" = "up in on dasatinib"))) %>%
ggplot(aes(reorder(variable,-log10(p.adj)), -log10(p.adj), fill = col)) +
# geom_bar(stat = "identity") +
geom_segment(aes(x = reorder(variable,-log10(p.adj)), xend = reorder(variable,-log10(p.adj)), y=0, yend=-log10(p.adj)), color = "gray30") + geom_point(shape = 21, size = 5) +
coord_flip() + labs(x = "") + facet_wrap(~dir) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted") + facets_nice + scale_fill_manual(values = c(getPalette(8)[2], "lightgrey", getPalette(8)[1])) + theme(legend.position = "none")
ggsave("results/manuscript/dasatinib/loliplot_facs_sigf.pdf", width = 5.5, height = 6)
p.df %>% filter(type == "facs") %>% mutate(p.adj = p.adjust(p.value, method = "BH")) %>%
filter(p.adj < 0.2) %>%
mutate(col = ifelse(p.adj < 0.05, dir, "no")) %>%
mutate(dir = plyr::revalue(dir, replace = c("down" = "up in diagnosis", "up" = "up in on dasatinib"))) %>%
ggplot(aes(reorder(variable,-log10(p.adj)), -log10(p.adj), fill = col)) +
# geom_bar(stat = "identity") +
geom_segment(aes(x = reorder(variable,-log10(p.adj)), xend = reorder(variable,-log10(p.adj)), y=0, yend=-log10(p.adj)), color = "gray30") + geom_point(shape = 21, size = 5) +
coord_flip() + labs(x = "") + facet_wrap(~dir) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted") + facets_nice + scale_fill_manual(values = c(getPalette(8)[2], "lightgrey", getPalette(8)[1])) + theme(legend.position = "none")
ggsave("results/manuscript/dasatinib/loliplot_facs_sigf_manu.pdf", width = 5.5, height = 4)
ggsave("results/manuscript/dasatinib/loliplot_facs_sigf_manu.pdf", width = 6, height = 6)
ggsave("results/manuscript/dasatinib/loliplot_facs_sigf_manu.pdf", width = 7, height = 6)
sigf_variables <- p.df %>% filter(p.adj < 0.1) %>% pull(variable)
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
ggplot(aes(timepoint, value, fill = fill)) + geom_violin(draw_quantiles = 0.5) + ggpubr::stat_compare_means(label = "p.signif") +
# facet_wrap(~reorder(variable, p.adj), scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
facet_wrap(~variable, scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette3(4)[c(2,1)]) + geom_jitter(size = 0.5) + facets_nice
## Compare before and after dasatinib
facs_3mo <- fread("results/manuscript/facs_3mo_df.txt")
dasa_facs_df <- facs_3mo %>% melt(id = c("timepoint","Study.nro","FM", "HRUH")) %>%
mutate(fill = ifelse(timepoint == "0mo", "diagnosis", "dasatinib+IFNa")) %>%
mutate(fill = ifelse(timepoint %in% c("3mo", "24mo"), "dasatinib", fill)) %>%
filter(timepoint %in% c("0mo", "3mo")) %>% dplyr::select(-Study.nro, -HRUH) %>% dplyr::rename(name = FM) %>% dplyr::select(name,timepoint,variable,value,fill) %>% mutate(type = "facs")
## Compare before and after dasatinib
facs_3mo <- fread("results/manuscript/facs_3mo_df.txt")
dasa_facs_df <- facs_3mo %>% melt(id = c("timepoint","Study.nro","FM", "HRUH")) %>%
mutate(fill = ifelse(timepoint == "0mo", "diagnosis", "dasatinib+IFNa")) %>%
mutate(fill = ifelse(timepoint %in% c("3mo", "24mo"), "dasatinib", fill)) %>%
filter(timepoint %in% c("0mo", "3mo")) %>% dplyr::select(-Study.nro, -HRUH) %>% dplyr::rename(name = FM) %>% dplyr::select(name,timepoint,variable,value,fill) %>% mutate(type = "facs")
dasa_facs_df <- dasa_facs_df %>% filter(!is.na(name))
dasa_df <- rbind(olink_dasa_df, dasa_facs_df)
p <- dasa_facs_df %>% ggplot(aes(timepoint, value, fill = fill)) + geom_violin(draw_quantiles = 0.5) +
# ggpubr::stat_compare_means(label = "p.signif") +
facet_wrap(~variable, scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette3(4)[c(2,1)]) + geom_jitter(size = 0.5)
ggsave(plot = p, "results/manuscript/dasatinib/violin_overall.pdf", width = 12, height = 12)
sigf_variables <- p.df %>% filter(p.adj < 0.1) %>% pull(variable)
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
ggplot(aes(timepoint, value, fill = fill)) + geom_violin(draw_quantiles = 0.5) + ggpubr::stat_compare_means(label = "p.signif") +
# facet_wrap(~reorder(variable, p.adj), scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
facet_wrap(~variable, scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette3(4)[c(2,1)]) + geom_jitter(size = 0.5) + facets_nice
ggsave("results/manuscript/dasatinib/violin_facs_sigf.pdf", width = 9, height = 6)
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
ggplot(aes(timepoint, value, fill = fill)) + geom_violin(draw_quantiles = 0.5) + ggpubr::stat_compare_means(label = "p.signif") +
theme_classic(base_size = 12) +
# facet_wrap(~reorder(variable, p.adj), scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
facet_wrap(~variable, scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette3(4)[c(2,1)]) + geom_jitter(size = 0.5) + facets_nice
ggsave("results/manuscript/dasatinib/violin_facs_sigf.pdf", width = 9, height = 6)
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
ggplot(aes(timepoint, value, fill = fill)) + geom_violin(draw_quantiles = 0.5) + ggpubr::stat_compare_means(label = "p.signif") +
theme_classic(base_size = 12) +
# facet_wrap(~reorder(variable, p.adj), scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
facet_wrap(~variable, scales = "free_y") + # ggsignif::geom_signif(comparisons = list(c("0mo", "12mo"))) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette3(4)[c(2,1)]) + geom_jitter(size = 0.5) + facets_nice + theme(legend.position = "none")
ggsave("results/manuscript/dasatinib/violin_facs_sigf.pdf", width = 9, height = 6)
#### NK FACS
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
filter(variable %in% c("NK.abs", "NK_CD16",	"NK_CD27",	"NK_CD45RA",	"NK_CD56BRIGHT",	"NK_CD57", "NK_CD62L", "NK_GrB")) %>%
ggplot(aes(timepoint, value, fill = fill)) +
# geom_violin(draw_quantiles = 0.5) +
geom_boxplot(draw_quantiles = 0.5, outlier.shape = NA) +
facet_wrap(~variable, scales = "free_y", ncol=4) + theme_classic(base_size = 12) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette(8)) + geom_jitter(size = 0.1) + facets_nice +
# ggpubr::stat_compare_means(label = "p.signif") +
# ggsignif::geom_signif(comparisons = list(c("0mo", "3mo")), map_signif_level = T) +
labs(x = "", y = "prop of NK cells") + theme(legend.position = "none")
#### NK FACS
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
filter(variable %in% c("NK.abs", "NK_CD16",	"NK_CD27",	"NK_CD45RA",	"NK_CD56BRIGHT",	"NK_CD57", "NK_CD62L", "NK_GrB")) %>%
ggplot(aes(timepoint, value, fill = fill)) +
# geom_violin(draw_quantiles = 0.5) +
geom_boxplot(draw_quantiles = 0.5, outlier.shape = NA) +
facet_wrap(~variable, scales = "free_y", ncol=4) + theme_classic(base_size = 12) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette(8)) + geom_jitter(size = 0.1) + facets_nice +
# ggpubr::stat_compare_means(label = "p.signif") +
# ggsignif::geom_signif(comparisons = list(c("0mo", "3mo")), map_signif_level = T) +
labs(x = "", y = "prop of NK cells") + theme(legend.position = "none")
ggsave("results/manuscript/dasatinib/box_nk_facs_sigf.pdf", width = 6, height = 3)
ggsave("results/manuscript/dasatinib/box_nk_facs_sigf.pdf", width = 7, height = 3)
#### NK FACS
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
# filter(variable %in% c("NK.abs", "NK_CD16",	"NK_CD27",	"NK_CD45RA",	"NK_CD56BRIGHT",	"NK_CD57", "NK_CD62L", "NK_GrB")) %>%
filter(variable %in% c("NK_CD16",	"NK_CD27",	"NK_CD45RA",	"NK_CD57", "NK_CD62L", "NK_GrB")) %>%
ggplot(aes(timepoint, value, fill = fill)) +
# geom_violin(draw_quantiles = 0.5) +
geom_boxplot(draw_quantiles = 0.5, outlier.shape = NA) +
facet_wrap(~variable, scales = "free_y", ncol=4) + theme_classic(base_size = 12) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette(8)) + geom_jitter(size = 0.1) + facets_nice +
# ggpubr::stat_compare_means(label = "p.signif") +
# ggsignif::geom_signif(comparisons = list(c("0mo", "3mo")), map_signif_level = T) +
labs(x = "", y = "prop of NK cells") + theme(legend.position = "none")
#### NK FACS
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
# filter(variable %in% c("NK.abs", "NK_CD16",	"NK_CD27",	"NK_CD45RA",	"NK_CD56BRIGHT",	"NK_CD57", "NK_CD62L", "NK_GrB")) %>%
filter(variable %in% c("NK_CD16",	"NK_CD27",	"NK_CD45RA",	"NK_CD57", "NK_CD62L", "NK_GrB")) %>%
ggplot(aes(timepoint, value, fill = fill)) +
# geom_violin(draw_quantiles = 0.5) +
geom_boxplot(draw_quantiles = 0.5, outlier.shape = NA) +
facet_wrap(~variable, scales = "free_y", ncol=3) + theme_classic(base_size = 12) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette(8)) + geom_jitter(size = 0.1) + facets_nice +
# ggpubr::stat_compare_means(label = "p.signif") +
# ggsignif::geom_signif(comparisons = list(c("0mo", "3mo")), map_signif_level = T) +
labs(x = "", y = "prop of NK cells") + theme(legend.position = "none")
ggsave("results/manuscript/dasatinib/box_nk_facs_sigf.pdf", width = 7, height = 3)
ggsave("results/manuscript/dasatinib/box_nk_facs_sigf.pdf", width = 5, height = 3)
dasa_df %>% filter(variable %in% sigf_variables) %>% left_join(p.df %>% filter(p.adj < 0.05)) %>%
left_join(var_df) %>% filter(type == "facs") %>%
filter(variable %in% c("CD3_abs", "CD8_abs", "CD8_CD57_abs")) %>%
ggplot(aes(timepoint, value, fill = fill)) +
# geom_violin(draw_quantiles = 0.5) +
geom_boxplot(draw_quantiles = 0.5, outlier.shape = NA) +
facet_wrap(~variable, scales = "free_y", ncol=3) + theme_classic(base_size = 12) +
geom_vline(xintercept = 1.5, linetype = "dotted") + geom_vline(xintercept = 2.5, linetype = "dotted") + ggpubr::rotate_x_text(angle = 45) + scale_fill_manual(values = getPalette(8)) + geom_jitter(size = 0.1) + facets_nice +
# ggpubr::stat_compare_means(label = "p.signif") +
# ggsignif::geom_signif(comparisons = list(c("0mo", "3mo")), map_signif_level = T) +
labs(x = "", y = "prop of NK cells") + theme(legend.position = "none")
ggsave("results/manuscript/dasatinib/box_cd8_facs_sigf.pdf", width = 5, height = 3)
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latentumap_1,latentumap_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_bw(base_size = 12) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
## Density plot
median_df <- cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>% group_by(cluster) %>% summarise(umap1=median(latentumap_1), umap2=median(latentumap_2))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latentumap_1,latentumap_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_bw(base_size = 12) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
scg1 <- c("706", "716", "720", "730")
clusters.to.rm <- c("14 CD8/B-cell doublet", "12 CD8 MAIT-like CXCR3+")
cells.to.keep    <- cml_seurat@meta.data %>%
# filter(grepl("CD8", cluster) | grepl("CD4", cluster) | grepl("T-cell", cluster) & !grepl("B-cell", cluster)) %>%
filter(grepl("CD8", cluster)) %>%
filter(!cluster %in% clusters.to.rm) %>% pull(barcode)
cd8_seurat <- subset(cml_seurat, cells = cells.to.keep)
cd8_seurat <- cd8_seurat %>% getLatentUMAP()
## Density plot
median_df <- cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>% group_by(cluster) %>% summarise(umap1=median(latentumap_1), umap2=median(latentumap_2))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latentumap_1,latentumap_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_bw(base_size = 12) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
cd8_seurat
## Density plot
median_df <- cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>% group_by(cluster) %>% summarise(umap1=median(latentumap_1), umap2=median(latentumap_2))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% head()
## Density plot
median_df <- cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>% group_by(cluster) %>% summarise(umap1=median(latent_1), umap2=median(latent_2))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latent_1,latent_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") +
# theme_bw(base_size = 12) +
theme_classic(base_size = 15) +
theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latent_1,latent_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") +
# theme_bw(base_size = 12) +
theme_classic(base_size = 15) +
theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3, size = 5) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
ggsave("results/manuscript/ifna/umap_dens_cd8.pdf", width = 12, height = 5)
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_bw(base_size = 12)
ifna_hallmark <- fread("results/interferon_alpha/hallmark_ifna.txt")[-1,]
cml_seurat    <- AddModuleScore(cml_seurat, list(ifna_hallmark$HALLMARK_INTERFERON_ALPHA_RESPONSE), name = "hallmark_ifna")
setwd(paste0("/Users/", me, "/Dropbox/NordCML/"))
ifna_hallmark <- fread("results/manuscript/ifna/hallmark_ifna.txt")[-1,]
cml_seurat    <- AddModuleScore(cml_seurat, list(ifna_hallmark$HALLMARK_INTERFERON_ALPHA_RESPONSE), name = "hallmark_ifna")
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_bw(base_size = 12)
cols <- brewer.pal(9, "RdYlBu")
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_bw(base_size = 12)
cml_seurat@reductions$latent_umap@cell.embeddings %>% bind_cols(cml_seurat@meta.data) %>% head
cml_seurat@reductions$latent_umap@cell.embeddings
cml_seurat@reductions$latent_umap@cell.embeddings %>% bind_cols(cml_seurat@meta.data) %>% head
cml_seurat@meta.data %>% head
data.frame(cml_seurat@reductions$latent_umap@cell.embeddings, cml_seurat@meta.data) %>% head
data.frame(cml_seurat@reductions$latent_umap@cell.embeddings, cml_seurat@meta.data) %>%
ggplot(aes(latent1,latent2))
data.frame(cml_seurat@reductions$latent_umap@cell.embeddings, cml_seurat@meta.data) %>%
ggplot(aes(latent1,latent2)) + geom_point()
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
## Density plot
cml_seurat$celltype <- cml_seurat$cluster %>% extractCoarsePhenotype()
cml_seurat$celltype <- ifelse(cml_seurat$celltype %in% c("B-cell", "CD4", "CD8", "Monocyte", "NK"), cml_seurat$celltype, NA)
data.frame(cml_seurat@reductions$latent_umap@cell.embeddings, cml_seurat@meta.data) %>%
ggplot(aes(latent1,latent2)) + geom_point()
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>% colnames
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df <- cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data)
df %>% ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
median_df <- cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>% group_by(celltype) %>% summarise(umap1=median(UMAP_1), umap2=median(UMAP_2))
df %>% ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2)) +
geom_point() +
stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2, color = hallmark_ifna1)) +
geom_point() +
stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2, color = hallmark_ifna1)) +
geom_point() +
stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
scale_color_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2, color = hallmark_ifna1)) +
geom_point() +
stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
# scale_color_distiller(direction=1) +
theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2)) +
geom_point(aes(color = hallmark_ifna1)) +
stat_ellipse(aes(group=celltype,color=celltype), linetype="dashed",type = "norm", segments = 10, size = 0.5) +
# scale_color_distiller(direction=1) +
theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
df %>% ggplot(aes(UMAP_1,UMAP_2)) +
geom_point(aes(color = hallmark_ifna1))
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_bw(base_size = 12)
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_classic(base_size = 15)
ggsave("results/manuscript/ifna/umap_ifna_score.png", width = 5, height = 4)
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_classic(base_size = 15) + labs(x = "UMAP 1", y = "UMAP 2")
ggsave("results/manuscript/ifna/umap_ifna_score.png", width = 5, height = 4)
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_classic(base_size = 15) + labs(x = "UMAP 1", y = "UMAP 2", color = "HALLMARK IFNa") + color()
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_classic(base_size = 15) + labs(x = "UMAP 1", y = "UMAP 2", color = "HALLMARK IFNa")
FeaturePlot(cml_seurat, reduction = "umap", features = "hallmark_ifna1", cols = c(low = cols[9], mid = cols[4], high = cols[1]), order = T, min.cutoff = 0.25, max.cutoff = 2.5, label = F, repel = T, pt.size = 0.5) + theme_classic(base_size = 15) + labs(x = "UMAP 1", y = "UMAP 2", color = "IFNa score", title = "")
ggsave("results/manuscript/ifna/umap_ifna_score.png", width = 5, height = 4)
## Follow antigen-specific clonotypes, ie clonotypes that are found more than once
clonotypes.to.keep <- as.data.frame(table(cml_seurat$new_clonotypes_id)) %>% filter(Freq>1) %>% pull(Var1)
clusters.to.rm <- c("14 CD8/B-cell doublet", "12 CD8 MAIT-like CXCR3+")
clusters.to.keep
cells.to.keep    <- cml_seurat@meta.data %>% filter(new_clonotypes_id %in% clonotypes.to.keep) %>%
# filter(grepl("CD8", cluster) | grepl("CD4", cluster) | grepl("T-cell", cluster) & !grepl("B-cell", cluster)) %>%
filter(grepl("CD8", cluster)) %>%
filter(!cluster %in% clusters.to.rm) %>% pull(barcode)
### TCRGP
tcrgp_df <- clonotype_seurat@meta.data %>% dplyr::select(new_clonotypes_id, trb_cdr3s_aa, trb_cdr3s_nt, v_trb, d_trb, j_trb)
## Find antigen-specific TCRs, select 0.95 as a threshold
ag_specific           <- lapply(list.files("results/manuscript/tcr/tcrgp/", full.names = T), function(x) fread(x)) %>% bind_cols()
colnames(ag_specific) <- do.call(lapply(list.files("results/manuscript/tcr/tcrgp/", full.names = T), extractFileName) , what = "c") %>% gsub(pattern = ".csv", replacement =  "") %>% gsub(pattern = "007_clonotype_", replacement =  "")
ag_specific[ag_specific < 0.9] <- 0
ag_specific_df   <- metadata %>% bind_cols(ag_specific)
ag_specific_filt <- ag_specific_df # %>% filter(count > 1)
## Find antigen-specific TCRs, select 0.95 as a threshold
ag_specific           <- lapply(list.files("results/manuscript/tcr/tcrgp/", full.names = T), function(x) fread(x)) %>% bind_cols()
colnames(ag_specific) <- do.call(lapply(list.files("results/manuscript/tcr/tcrgp/", full.names = T), extractFileName) , what = "c") %>% gsub(pattern = ".csv", replacement =  "") %>% gsub(pattern = "007_clonotype_", replacement =  "")
ag_specific[ag_specific < 0.9] <- 0
ag_specific_df   <- metadata %>% bind_cols(ag_specific)
## Follow antigen-specific clonotypes, ie clonotypes that are found more than once
clonotypes.to.keep <- as.data.frame(table(cml_seurat$new_clonotypes_id)) %>% filter(Freq>1) %>% pull(Var1)
clusters.to.rm <- c("14 CD8/B-cell doublet", "12 CD8 MAIT-like CXCR3+")
clusters.to.keep
cells.to.keep    <- cml_seurat@meta.data %>% filter(new_clonotypes_id %in% clonotypes.to.keep) %>%
# filter(grepl("CD8", cluster) | grepl("CD4", cluster) | grepl("T-cell", cluster) & !grepl("B-cell", cluster)) %>%
filter(grepl("CD8", cluster)) %>%
filter(!cluster %in% clusters.to.rm) %>% pull(barcode)
clonotype_seurat <- subset(cml_seurat, cells = cells.to.keep)
clonotype_seurat <- clonotype_seurat %>% getLatentUMAP()
# tcrgp_df <- fread("results/manuscript/tcr/tcrgp_df.txt")
metadata <- clonotype_seurat@meta.data
## Find antigen-specific TCRs, select 0.95 as a threshold
ag_specific           <- lapply(list.files("results/manuscript/tcr/tcrgp/", full.names = T), function(x) fread(x)) %>% bind_cols()
colnames(ag_specific) <- do.call(lapply(list.files("results/manuscript/tcr/tcrgp/", full.names = T), extractFileName) , what = "c") %>% gsub(pattern = ".csv", replacement =  "") %>% gsub(pattern = "007_clonotype_", replacement =  "")
ag_specific[ag_specific < 0.9] <- 0
ag_specific_df   <- metadata %>% bind_cols(ag_specific)
ag_specific_filt <- ag_specific_df # %>% filter(count > 1)
preds_df <- ag_specific_filt %>% dplyr::select(ELAGIGILTV_cdr3b_comb:YVLDHLIVV_cdr3b)
target <- apply(preds_df, 1, function(x) ifelse(max(x) == 0, 16, which.max(x)))
ag_specific_filt$target <- target
ag_specific_filt$target <- c(colnames(preds_df), "none")[ag_specific_filt$target]
ag_specific_filt$target[rowSums(preds_df) > 1] <- "multi"
ag_specific_filt$target[is.na(ag_specific_filt$target)] <- "none"
data.frame(ag_specific_filt$pr1_cdr3b, ag_specific_filt$trb_cdr3s_aa) %>% View
clonotype_seurat$target <- ag_specific_filt$target
##
cl_metadata <- clonotype_seurat@meta.data %>% group_by(orig.ident) %>% summarise(total_clonotype_reads = n())
meta <- clonotype_seurat@meta.data %>% left_join(cl_metadata)
rownames(meta) <- meta$barcode
clonotype_seurat@meta.data <- meta
cl_metadata <- clonotype_seurat@meta.data %>% group_by(orig.ident, timepoint, patient.x) %>% summarise(total_clonotype_reads = n())
clonotype_seurat@meta.data %>%
filter(temp == "y") %>%
group_by(orig.ident, cluster) %>% summarise(n=n()) %>% mutate(prop=n/sum(n)) %>%
left_join(cl_metadata) %>% mutate(prop=n/total_clonotype_reads) %>%
ggplot(aes(timepoint,prop,fill=cluster)) + geom_bar(stat="identity")
df <- clonotype_seurat@meta.data %>% group_by(orig.ident, target, .drop = FALSE) %>% summarise(n=n()) %>%
filter(target == "NLVPMVATV_cdr3b")
cl_metadata %>% left_join(df) %>% mutate(n = ifelse(is.na(n),0,n)) %>%
mutate(prop=n/total_clonotype_reads) %>%
ggplot(aes(timepoint,prop,fill=timepoint)) + geom_boxplot(outlier.shape = NA) + geom_jitter(size=0.7) + scale_fill_manual(values=getPalette3(4)) + theme_classic(base_size = 12) + theme(legend.position = "none") +
labs(x = "", y = "prop of \nanti-CMV clonotypes in repertoire")
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) + facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) + ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5)
patient_df <- cml_seurat@meta.data %>% group_by(orig.ident, timepoint, patient) %>% summarise(n = n()) %>% dplyr::select(-n)
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) + facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) + ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5)
cml_seurat@meta.data %>% head()
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) + facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) + ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5)
patient_df <- cml_seurat@meta.data %>% group_by(orig.ident, timepoint, patient) %>% summarise(n = n()) %>% dplyr::select(-n)
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) + facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) + ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5)
patient_df <- cml_seurat@meta.data %>% group_by(orig.ident, timepoint, patient.x) %>% summarise(n = n()) %>% dplyr::select(-n)
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) + facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) + ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5)
ggsave("results/manuscript/overall/box_cluster.pdf", width = 12, height = 7)
ggsave("results/manuscript/overall/box_cluster.pdf", width = 15, height = 7)
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) +
theme_classic(base_size = 12) +
facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) + ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5)
ggsave("results/manuscript/overall/box_cluster.pdf", width = 15, height = 7)
cml_seurat@meta.data %>%
group_by(orig.ident, cluster) %>% summarise(n = n()) %>% mutate(prop = n / sum(n)) %>% left_join(patient_df) %>%
ggplot(aes(timepoint,prop, fill = timepoint)) + geom_boxplot(outlier.shape = NA) +
theme_classic(base_size = 12) +
facet_wrap(~cluster, scales = "free_y") + ggpubr::rotate_x_text(45) +
ggpubr::stat_compare_means(label = "p.format") + scale_fill_manual(values = getPalette3(4)) +
theme(legend.position = "none") + facets_nice + geom_jitter(size = 0.5) + labs(x = "")
ggsave("results/manuscript/overall/box_cluster.pdf", width = 15, height = 7)
# median_df <- cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>% group_by(cluster) %>% summarise(umap1=median(UMAP_1), umap2=median(UMAP_2))
median_df <- cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>% group_by(celltype) %>% summarise(umap1=median(UMAP_1), umap2=median(UMAP_2))
# cml_seurat$cluster
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
# cml_seurat$cluster
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "right") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) #+ ylim(values = c(-4,8))
# cml_seurat$cluster
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "right") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) + guides(colour = guide_legend(show = FALSE))
# cml_seurat$cluster
cml_seurat@reductions$umap@cell.embeddings %>% as.data.frame %>% bind_cols(cml_seurat@meta.data) %>%
ggplot(aes(UMAP_1,UMAP_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
# stat_density_2d(aes(fill = ..level.., color=cluster), geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
# stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
stat_ellipse(aes(group=celltype,color=celltype),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") + theme_classic(base_size = 20) + theme(legend.position = "right") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=celltype,color=celltype), min.segment.length = 1, nudge_y = 5, size = 6) +
facets_nice + scale_color_manual(values = getPalette(9)) + guides(color = guide_legend(show = FALSE))
ggsave("results/manuscript/overall/umap_dens_timepoint.pdf", width = 12, height = 5)
## Density plot
median_df <- cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>% group_by(cluster) %>% summarise(umap1=median(latent_1), umap2=median(latent_2))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latent_1,latent_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") +
# theme_bw(base_size = 12) +
theme_classic(base_size = 15) +
theme(legend.position = "none") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3, size = 5) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
cd8_seurat@reductions$latent_umap@cell.embeddings %>% as.data.frame %>% bind_cols(cd8_seurat@meta.data) %>%
ggplot(aes(latent_1,latent_2)) +
stat_density_2d(aes(fill = ..level..), color="gray50", geom = "polygon") +
#  ggalt::geom_encircle(aes(group=cluster), expand=1e-8) +
stat_ellipse(aes(group=cluster,color=cluster),linetype="dashed",type = "norm", segments = 10, size = 0.5) +
facet_wrap(~timepoint) + scale_fill_distiller(direction=1) + theme(legend.position = "none") +
# theme_bw(base_size = 12) +
theme_classic(base_size = 15) +
theme(legend.position = "right") + labs(x = "UMAP 1", y = "UMAP 2") +
ggrepel::geom_label_repel(data=median_df,aes(umap1,umap2,label=cluster,color=cluster), min.segment.length = 1, nudge_y = 5.5, nudge_x = 1, force = 3, size = 5) +
facets_nice + scale_color_manual(values = getPalette(10)) + ylim(values = c(-4,8))
ggsave("results/manuscript/ifna/umap_dens_cd8.pdf", width = 12, height = 5)
ggsave("results/manuscript/ifna/umap_dens_cd8.pdf", width = 14, height = 5)
## Compare before and after dasatinib
facs_3mo <- fread("results/manuscript/facs_3mo_df.txt")
dasa_facs_df <- facs_3mo %>% melt(id = c("timepoint","Study.nro","FM", "HRUH")) %>%
mutate(fill = ifelse(timepoint == "0mo", "diagnosis", "dasatinib+IFNa")) %>%
mutate(fill = ifelse(timepoint %in% c("3mo", "24mo"), "dasatinib", fill)) %>%
filter(timepoint %in% c("0mo", "3mo")) %>% dplyr::select(-Study.nro, -HRUH) %>% dplyr::rename(name = FM) %>% dplyr::select(name,timepoint,variable,value,fill) %>% mutate(type = "facs")
dasa_facs_df <- dasa_facs_df %>% filter(!is.na(name))
dasa_df <- rbind(olink_dasa_df, dasa_facs_df)
